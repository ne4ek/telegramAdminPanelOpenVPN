import os
from typing import List, Dict, Tuple
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


class FileService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    
    def __init__(self, files_per_page: int = 10):
        self.files_per_page = files_per_page
    
    def create_pagination_keyboard(self, files: List[Dict], current_page: int = 0) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
        
        Args:
            files: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
            current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
            
        Returns:
            InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ñ–∞–π–ª–æ–≤ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        """
        total_files = len(files)
        total_pages = (total_files + self.files_per_page - 1) // self.files_per_page
        
        # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        start_idx = current_page * self.files_per_page
        end_idx = min(start_idx + self.files_per_page, total_files)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        page_files = files[start_idx:end_idx]
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        keyboard_buttons = []
        
        for i, file_info in enumerate(page_files, start_idx + 1):
            username = file_info['username']
            size_kb = file_info['size_kb']
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
            keyboard_buttons.append([
                InlineKeyboardButton(
                    text=f"üìÅ {username} ({size_kb:.1f} KB)",
                    callback_data=f"download_{username}"
                )
            ])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if total_pages > 1:
            navigation_buttons = self._create_navigation_buttons(current_page, total_pages)
            keyboard_buttons.extend(navigation_buttons)
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
    
    def create_files_list_text(self, files: List[Dict], current_page: int = 0) -> str:
        """
        –°–æ–∑–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
        
        Args:
            files: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
            current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
            
        Returns:
            str: –¢–µ–∫—Å—Ç —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
        """
        total_files = len(files)
        total_pages = (total_files + self.files_per_page - 1) // self.files_per_page
        
        # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        start_idx = current_page * self.files_per_page
        end_idx = min(start_idx + self.files_per_page, total_files)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        page_files = files[start_idx:end_idx]
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        users_list = f"üë• **–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π OpenVPN** (—Å—Ç—Ä. {current_page + 1}/{total_pages}):\n\n"
        
        for i, file_info in enumerate(page_files, start_idx + 1):
            username = file_info['username']
            size_kb = file_info['size_kb']
            users_list += f"{i}. **{username}** ({size_kb:.1f} KB)\n"
        
        users_list += f"\nüìä **–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** {total_files}\n"
        users_list += "üí° **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞:**"
        
        return users_list
    
    def get_page_files(self, files: List[Dict], page: int) -> List[Dict]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        
        Args:
            files: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
            page: –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–∞—á–∏–Ω–∞—è —Å 0)
            
        Returns:
            List[Dict]: –§–∞–π–ª—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        """
        start_idx = page * self.files_per_page
        end_idx = min(start_idx + self.files_per_page, len(files))
        return files[start_idx:end_idx]
    
    def get_total_pages(self, files: List[Dict]) -> int:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        
        Args:
            files: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
            
        Returns:
            int: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        """
        return (len(files) + self.files_per_page - 1) // self.files_per_page
    
    def _create_navigation_buttons(self, current_page: int, total_pages: int) -> List[List[InlineKeyboardButton]]:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        
        Args:
            current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            total_pages: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
            
        Returns:
            List[List[InlineKeyboardButton]]: –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        """
        navigation_buttons = []
        nav_row = []
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if current_page > 0:
            nav_row.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"page_{current_page - 1}"
            ))
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        nav_row.append(InlineKeyboardButton(
            text=f"{current_page + 1}/{total_pages}",
            callback_data="page_info"
        ))
        
        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        if current_page < total_pages - 1:
            nav_row.append(InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è",
                callback_data=f"page_{current_page + 1}"
            ))
        
        navigation_buttons.append(nav_row)
        return navigation_buttons
